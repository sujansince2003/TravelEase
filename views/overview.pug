extends base

block content
  .hero
    img.hero-img(src="/img/mainPhoto.jpg", alt="Mountain View")
    .overlay
      h1 TravelEase: Book your next Tour

  .heading-tour
    span Our Tour Packages

  main.main
    .card-container
      each tour in tours
        .card
          .card__header
            .card__picture
              .card__picture-overlay &nbsp;
              img.card__picture-img(src=`/img/tours/${tour.imageCover}`, alt=`${tour.name}`)
            h3.heading-tertirary
              span= tour.name

          .card__details
            h4.card__sub-heading= `${tour.difficulty} ${tour.duration}-day tour`
            p.card__text= tour.summary
            .card__data
              svg.card__icon
                use(xlink:href='/img/icons.svg#icon-map-pin')
              span= tour.startLocation.description
            .card__data
              svg.card__icon
                use(xlink:href='/img/icons.svg#icon-calendar')
              span= tour.difficulty
            .card__data
              svg.card__icon
                use(xlink:href='/img/icons.svg#icon-flag')
              span= `${tour.locations.length} stops`
            .card__data
              svg.card__icon
                use(xlink:href='/img/icons.svg#icon-user')
              span= `${tour.maxGroupSize} people`

          .card__footer
            p
            span.card__footer-value= `Npr ${tour.price}`
            span.card__footer-text per person
            p.card__ratings
            span.card__footer-value= tour.ratingsAverage
            span.card__footer-text= `rating (${tour.ratingsQuantity})`
            a.btn.btn--green.btn--small(href=`/tour/${tour.slug}`) Details

  //- Floating Chat Button
  button#chat-toggle-button Chat 💬

  //- Chatbot Container
  #chatbot-container(style="display: none;")
    #chatbot
      #chat-header
        | Chat with us 💬
        span#chat-close(style='cursor:pointer; float:right;') ✖
      #chat-body
        .chat-messages
      #chat-input
        input(type="text", id="chat-message", placeholder="Type your message...")
        button(type="button", id="send-message") Send

  //- Chatbot Styles
  style.
    #chat-toggle-button {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background: #28b485;
      color: white;
      border: none;
      padding: 12px 16px;
      border-radius: 30px;
      cursor: pointer;
      z-index: 1001;
      box-shadow: 0 4px 8px rgba(0,0,0,0.3);
    }
    #chatbot-container {
      position: fixed;
      bottom: 70px;
      right: 20px;
      width: 300px;
      font-family: sans-serif;
      z-index: 1000;
    }
    #chatbot {
      background: white;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0,0,0,0.2);
      overflow: hidden;
      display: flex;
      flex-direction: column;
      max-height: 400px;
    }
    #chat-header {
      background: #28b485;
      color: white;
      padding: 10px;
      font-weight: bold;
      text-align: center;
    }
    #chat-body {
      flex: 1;
      overflow-y: auto;
      padding: 10px;
    }
    .chat-messages .message {
      margin: 5px 0;
      padding: 8px;
      border-radius: 8px;
      max-width: 80%;
    }
    .chat-messages .user {
      background: #e0f7fa;
      align-self: flex-end;
      margin-left: auto;
    }
    .chat-messages .bot {
      background: #f1f1f1;
      align-self: flex-start;
      margin-right: auto;
    }
    #chat-input {
      display: flex;
      border-top: 1px solid #ccc;
    }
    #chat-input input {
      flex: 1;
      padding: 8px;
      border: none;
      outline: none;
    }
    #chat-input button {
      background: #28b485;
      color: white;
      border: none;
      padding: 8px 12px;
      cursor: pointer;
    }

  //- Chatbot JavaScript
  script.
    document.addEventListener('DOMContentLoaded', () => {
      const input = document.getElementById('chat-message');
      const sendButton = document.getElementById('send-message');
      const messages = document.querySelector('.chat-messages');
      const toggleButton = document.getElementById('chat-toggle-button');
      const chatbox = document.getElementById('chatbot-container');
      const closeButton = document.getElementById('chat-close');

      // Toggle open/close
      toggleButton.addEventListener('click', () => {
        const isHidden = chatbox.style.display === 'none';
        chatbox.style.display = isHidden ? 'block' : 'none';
        toggleButton.textContent = isHidden ? 'Close ❌' : 'Chat 💬';
      });

      closeButton.addEventListener('click', () => {
        chatbox.style.display = 'none';
        toggleButton.textContent = 'Chat 💬';
      });

      const addMessage = (text, sender) => {
        const msg = document.createElement('div');
        msg.className = `message ${sender}`;
        msg.textContent = text;
        messages.appendChild(msg);
        messages.scrollTop = messages.scrollHeight;
      };

      sendButton.addEventListener('click', async () => {
        const message = input.value.trim();
        if (!message) return;

        addMessage(message, 'user');
        input.value = '';

        try {
          const res = await fetch('/api/v1/chat/chatbotresponse', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message })
          });

          const data = await res.json();
          addMessage(data.reply, 'bot');
        } catch (err) {
          addMessage('Sorry, there was an error. Please try again later.', 'bot');
        }
      });

      input.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') sendButton.click();
      });
    });
